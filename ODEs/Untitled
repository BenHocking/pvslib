Starting pvs-allegro -qq ...
International Allegro CL Enterprise Edition
10.1 [64-bit Mac OS X (Intel) *SMP*] (Jan 29, 2020 4:28)
Copyright (C) 1985-2017, Franz Inc., Oakland, CA, USA.  All Rights Reserved.

This dynamic runtime copy of Allegro CL was built by:
   [TC21719] SRI International

;; Optimization settings: safety 1, space 1, speed 3, debug 1.
;; For a complete description of all compiler switches given the
;; current optimization settings evaluate (explain-compiler-settings).
;;---
;; Current reader case mode: :case-sensitive-lower

Setting tmp dir to value of environment variable TMPDIR:
  /var/folders/m3/hkdtdfrs6g7fcb5clg6z98jr0000gp/T/

Attempting to compile patch file patch-20291231-100
;;; Compiling file
;;;   /Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-100.lisp
;;; Writing fasl file
;;;   /Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-100.n64fasl
;;; Fasl write complete

Compilation complete, generated file ~/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-100.n64fasl
Attempting to load compiled patch file ~/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-100.n64fasl
Attempting to compile patch file patch-20291231-200
;;; Compiling file
;;;   /Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.lisp
; While file-compiling
#'(method translate-to-metitarski* (fieldappl t)) in
#P"/Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.lisp"
; starting at file character position 6230:
Warning: Variable bindings is never used.
; While file-compiling #'(method translate-to-metitarski* (projappl t))
in
#P"/Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.lisp"
; starting at file character position 6345:
Warning: Variable bindings is never used.
; While file-compiling #'(method translate-to-metitarski* (decimal t))
in
#P"/Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.lisp"
; starting at file character position 6459:
Warning: Variable bindings is never used.
; While file-compiling
#'(method translate-to-metitarski* (rational-expr t)) in
#P"/Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.lisp"
; starting at file character position 6576:
Warning: Variable bindings is never used.
; While file-compiling
#'(method translate-to-metitarski* (string-expr t)) in
#P"/Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.lisp"
; starting at file character position 6790:
Warning: Variable bindings is never used.
; While file-compiling
#'(method translate-to-metitarski* (binding-expr t)) in
#P"/Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.lisp"
; starting at file character position 10726:
Warning: Variable bindings is never used.
;;; Writing fasl file
;;;   /Users/jtslagel/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.n64fasl
;;; Fasl write complete

Compilation complete, generated file ~/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.n64fasl
Attempting to load compiled patch file ~/pvs/pvs-7.0.1203/nasalib/pvs-patches/patch-20291231-200.n64fasl
Defining metit. 
Attempting to compile patch file .pvs
;;; Compiling file /Users/jtslagel/.pvs.lisp
;;; Writing fasl file /Users/jtslagel/.pvs.n64fasl
;;; Fasl write complete

Compilation complete, generated file ~/.pvs.n64fasl
Attempting to load compiled patch file ~/.pvs.n64fasl;;; Compiling file /Users/jtslagel/pvs/pvs-7.0.1203/src/asdf-patch.lisp
;;; Writing fasl file
;;;   /Users/jtslagel/pvs/pvs-7.0.1203/src/asdf-patch.n64fasl
;;; Fasl write complete

pvs(1): 
pvs(2): 
Installing rewrite rule sets[nat].singleton_rew
Installing rewrite rule sets.singleton_rew (all instances)
Installing rewrite rule vectors@vectors.add_cancel_neg2 (all instances)
Installing rewrite rule vectors@vectors.add_cancel_neg2 (all instances)
Installing rewrite rule vectors@vectors.add_cancel2 (all instances)
Installing rewrite rule vectors@vectors.add_cancel2 (all instances)
Installing rewrite rule vectors@vectors.sub_cancel_neg (all instances)
Installing rewrite rule vectors@vectors.sub_cancel_neg (all instances)
Installing rewrite rule vectors@vectors.add_cancel_neg (all instances)
Installing rewrite rule vectors@vectors.add_cancel_neg (all instances)
Installing rewrite rule vectors@vectors.sub_cancel (all instances)
Installing rewrite rule vectors@vectors.sub_cancel (all instances)
Installing rewrite rule vectors@vectors.add_cancel (all instances)
Installing rewrite rule vectors@vectors.add_cancel (all instances)
Installing rewrite rule vectors@vectors.comp_zero (all instances)
Installing rewrite rule vectors@vectors.comp_zero (all instances)
Installing rewrite rule vectors@vectors.norm_neg (all instances)
Installing rewrite rule vectors@vectors.norm_neg (all instances)
Installing rewrite rule vectors@vectors.sqrt_sqv_sq (all instances)
Installing rewrite rule vectors@vectors.sqrt_sqv_sq (all instances)
Installing rewrite rule vectors@vectors.sqv_neg (all instances)
Installing rewrite rule vectors@vectors.sqv_neg (all instances)
Installing rewrite rule vectors@vectors.scal_assoc (all instances)
Installing rewrite rule vectors@vectors.scal_assoc (all instances)
Installing rewrite rule vectors@vectors.dot_scal_canon (all instances)
Installing rewrite rule vectors@vectors.dot_scal_canon (all instances)
Installing rewrite rule vectors@vectors.dot_scal_right (all instances)
Installing rewrite rule vectors@vectors.dot_scal_right (all instances)
Installing rewrite rule vectors@vectors.dot_scal_left (all instances)
Installing rewrite rule vectors@vectors.dot_scal_left (all instances)
Installing rewrite rule vectors@vectors.neg_neg (all instances)
Installing rewrite rule vectors@vectors.neg_neg (all instances)
Installing rewrite rule vectors@vectors.add_neg_sub (all instances)
Installing rewrite rule vectors@vectors.add_neg_sub (all instances)
Installing rewrite rule vectors@vectors.norm_normalize (all instances)
Installing rewrite rule vectors@vectors.norm_normalize (all instances)
Installing rewrite rule vectors@vectors.norm_zero (all instances)
Installing rewrite rule vectors@vectors.norm_zero (all instances)
Installing rewrite rule vectors@vectors.sqv_zero (all instances)
Installing rewrite rule vectors@vectors.sqv_zero (all instances)
Installing rewrite rule vectors@vectors.scal_neg_1 (all instances)
Installing rewrite rule vectors@vectors.scal_neg_1 (all instances)
Installing rewrite rule vectors@vectors.scal_1 (all instances)
Installing rewrite rule vectors@vectors.scal_1 (all instances)
Installing rewrite rule vectors@vectors.scal_0 (all instances)
Installing rewrite rule vectors@vectors.scal_0 (all instances)
Installing rewrite rule vectors@vectors.scal_zero (all instances)
Installing rewrite rule vectors@vectors.scal_zero (all instances)
Installing rewrite rule vectors@vectors.dot_zero_right (all instances)
Installing rewrite rule vectors@vectors.dot_zero_right (all instances)
Installing rewrite rule vectors@vectors.dot_zero_left (all instances)
Installing rewrite rule vectors@vectors.dot_zero_left (all instances)
Installing rewrite rule vectors@vectors.neg_add_right (all instances)
Installing rewrite rule vectors@vectors.neg_add_right (all instances)
Installing rewrite rule vectors@vectors.neg_add_left (all instances)
Installing rewrite rule vectors@vectors.neg_add_left (all instances)
Installing rewrite rule vectors@vectors.sub_eq_args (all instances)
Installing rewrite rule vectors@vectors.sub_eq_args (all instances)
Installing rewrite rule vectors@vectors.sub_zero_right (all instances)
Installing rewrite rule vectors@vectors.sub_zero_right (all instances)
Installing rewrite rule vectors@vectors.sub_zero_left (all instances)
Installing rewrite rule vectors@vectors.sub_zero_left (all instances)
Installing rewrite rule vectors@vectors.add_zero_right (all instances)
Installing rewrite rule vectors@vectors.add_zero_right (all instances)
Installing rewrite rule vectors@vectors.add_zero_left (all instances)
Installing rewrite rule vectors@vectors.add_zero_left (all instances)
Installing rewrite rule vectors@vectors.neg_zero (all instances)
Installing rewrite rule vectors@vectors.neg_zero (all instances)
Installing rewrite rule sets[nat].member
Installing rewrite rule sets[nat].member
Installing rewrite rule sets.member (all instances)
Installing rewrite rule list_props.member (all instances)
Installing rewrite rule sets[nat].member
Installing rewrite rule sets.member (all instances)
Installing rewrite rule list_props.member (all instances)
Installing rewrite rule lnexp@ln_exp.ln_e
Installing rewrite rule lnexp@ln_exp.ln_1
Installing rewrite rule lnexp@ln_exp.exp_1
Installing rewrite rule lnexp@ln_exp.exp_0
Installing rewrite rule lnexp@ln_exp.conn_posreal
Installing rewrite rule analysis@deriv_domain.deriv_domain_real
Installing rewrite rule analysis@deriv_domain.deriv_domain_nzreal
Installing rewrite rule analysis@deriv_domain.deriv_domain_posreal
Installing rewrite rule analysis@deriv_domain.deriv_domain_nnreal
Installing rewrite rule analysis@deriv_domain.deriv_domain_negreal
Installing rewrite rule analysis@deriv_domain.not_one_element_real
Installing rewrite rule analysis@deriv_domain.not_one_element_nzreal
Installing rewrite rule analysis@deriv_domain.not_one_element_posreal
Installing rewrite rule analysis@deriv_domain.not_one_element_nnreal
Installing rewrite rule analysis@deriv_domain.not_one_element_negreal
Installing rewrite rule lnexp@expt.hathat_1
Installing rewrite rule lnexp@expt.hathat_0
Installing rewrite rule lnexp@expt.hathat_to_1
Installing rewrite rule lnexp@expt.hathat_to_0
Installing rewrite rule lnexp@hyperbolic.deriv_domain_posreal_gt1
Installing rewrite rule lnexp@hyperbolic.deriv_domain_abs_lt1
Installing rewrite rule lnexp@hyperbolic.conn_real
Installing rewrite rule lnexp@hyperbolic.conn_abs_lt1
Installing rewrite rule lnexp@hyperbolic.noa_posreal_gt1
Installing rewrite rule lnexp@hyperbolic.noa_abs_lt1
Installing rewrite rule ints@factorial.factorial_1
Installing rewrite rule ints@factorial.factorial_0
Installing rewrite rule reals@sigma_nat.sigma_0_neg
Installing rewrite rule reals@sigma_nat.sigma_0_neg
Installing rewrite rule reals@sigma_upto.sigma_0_neg (all instances)
Installing rewrite rule reals@sigma_below.sigma_0_neg (all instances)
Installing rewrite rule series@power_series.hat_02n
Installing rewrite rule exponentiation.expt_1i
Installing rewrite rule exponentiation.expt_x1
Installing rewrite rule exponentiation.expt_x0
Installing rewrite rule exponentiation.expt_x0
Installing rewrite rule exponentiation.expt_x1
Installing rewrite rule exponentiation.expt_1i
Installing rewrite rule reals@exponent_props.zero_hat
Installing rewrite rule lnexp@ln_series.noa_abslt1
Installing rewrite rule lnexp@ln_series.conn_abslt1
Installing rewrite rule lnexp@ln_series.deriv_domain_gtm1
Installing rewrite rule lnexp@ln_series.conn_posreal
Installing rewrite rule analysis@deriv_domain.deriv_domain_posreal
Installing rewrite rule lnexp@ln_series.noa_posreal
Installing rewrite rule lnexp@ln_series.conn_gt_m1
Installing rewrite rule lnexp@ln_series.noa_gt_m1
Installing rewrite rule reals@sigma_nat.sigma_0_neg
Installing rewrite rule reals@sigma_upto.sigma_0_neg (all instances)
Installing rewrite rule reals@sigma_below.sigma_0_neg (all instances)
Installing rewrite rule analysis@deriv_domain.deriv_domain_posreal
Installing rewrite rule lnexp@ln_exp_series_alt.conn_posreal
Installing rewrite rule lnexp@ln_exp_series_alt.noa_posreal
Installing rewrite rule lnexp@ln_exp_series_alt.deriv_domain_gtm1
Installing rewrite rule lnexp@ln_exp_series_alt.conn_gt_m1
Installing rewrite rule lnexp@ln_exp_series_alt.noa_gt_m1
Installing rewrite rule analysis@deriv_domain.deriv_domain_posreal
Installing rewrite rule lnexp@ln_exp_ineq.conn_posreal
Installing rewrite rule lnexp@ln_exp_ineq.noa_posreal
Installing rewrite rule reals@sigma_upto.sigma_0_neg (all instances)
Installing rewrite rule reals@sigma_below.sigma_0_neg (all instances)
Installing rewrite rule sets[nat].member
Installing rewrite rule sets.member (all instances)
Installing rewrite rule list_props.member (all instances)
Installing rewrite rule finite_sequences.finseq_appl (all instances)
Installing rewrite rule analysis@lim_of_functions.adherence_fullset (all instances)
Installing rewrite rule structures@seqs.seq1_def (all instances)
Installing rewrite rule structures@sort_seq.sort_length (all instances)
Installing rewrite rule analysis@partitions_scaf.set2seq_length (all instances)
Installing rewrite rule analysis@partitions_scaf.set2part_length (all instances)
Installing rewrite rule analysis@integral_bounded.not_one_element (all instances)
Installing rewrite rule analysis@integral_split.not_one_element (all instances)
Installing rewrite rule structures@more_list_props[real].length_null
Installing rewrite rule structures@more_list_props.length_null (all instances)
Installing rewrite rule structures@more_list_props[real].length_singleton
Installing rewrite rule structures@more_list_props.length_singleton (all instances)
Installing rewrite rule reals@sigma_nat.sigma_0_neg
Installing rewrite rule reals@sq.sq_abs_neg
Installing rewrite rule reals@sq.sq_abs
Installing rewrite rule reals@sq.sq_1
Installing rewrite rule reals@sq.sq_0
Installing rewrite rule reals@sign.sign_nat
Installing rewrite rule reals@sqrt.sqrt_4
Installing rewrite rule reals@sqrt.sqrt_9
Installing rewrite rule reals@sqrt.sqrt_16
Installing rewrite rule reals@sqrt.sqrt_25
Installing rewrite rule reals@sqrt.sqrt_0
Installing rewrite rule reals@sqrt.sqrt_1
Installing rewrite rule reals@sqrt.sqrt_square
Installing rewrite rule reals@sqrt.sqrt_sq
Installing rewrite rule reals@sqrt.sqrt_sq_neg
Installing rewrite rule reals@sqrt.sq_sqrt
ode_sol_extend :  

  |-------
{1}   FORALL (n: posnat, a: real, b: {bb: real | bb > a},
              c: {cc: real | cc > b},
              f:
                {ff: od_f[(closed_interval(a, c))](n) |
                   Lip_d?[(closed_interval(a, c))](n)(ff) AND
                    cont_d?[(closed_interval(a, c))](n)(ff)},
              y0: VectorN(n)):
        (LAMBDA (t: (closed_interval(a, b))):
           ode_sol(closed_interval(a, c), n, f)(y0)(t))
         =
         ode_sol(closed_interval(a, b), n,
                 restrict[(closed_interval(a, c)), (closed_interval(a, b))]
                     (n, f))
                (y0)

Rule? (skeep)
Skolemizing and keeping names of the universal formula in (+ -),
this simplifies to: 
ode_sol_extend :  

  |-------
{1}   (LAMBDA (t: (closed_interval(a, b))):
         ode_sol(closed_interval(a, c), n, f)(y0)(t))
       =
       ode_sol(closed_interval(a, b), n,
               restrict[(closed_interval(a, c)), (closed_interval(a, b))]
                   (n, f))
              (y0)

Rule? (decompose-equality 1)
Applying decompose-equality,
this yields  4 subgoals: 
ode_sol_extend.1 :  

  |-------
{1}   ode_sol(closed_interval(a, c), n, f)(y0)(x!1) =
       ode_sol(closed_interval(a, b), n,
               restrict[(closed_interval(a, c)), (closed_interval(a, b))]
                   (n, f))
              (y0)(x!1)

Rule? (expand "restrict" 1 1)
Expanding the definition of restrict,
this simplifies to: 
ode_sol_extend.1 :  

  |-------
{1}   ode_sol(closed_interval(a, c), n, f)(y0)(x!1) =
       ode_sol(closed_interval(a, b), n,
               LAMBDA (x: (closed_interval(a, b)),
                       v: VectorN(n)) -> VectorN(n):
                 f(x, v))
              (y0)(x!1)

Rule? (typepred "ode_sol(closed_interval(a, c), n, f)(y0)(x!1)")
Adding type constraints for  ode_sol(closed_interval(a, c), n, f)
                                    (y0)
                                    (x!1),
this simplifies to: 
ode_sol_extend.1 :  

{-1}  every(LAMBDA (x: number): number_field_pred(x) AND real_pred(x))
           (ode_sol(closed_interval(a, c), n, f)(y0)(x!1))
{-2}  length(ode_sol(closed_interval(a, c), n, f)(y0)(x!1)) = n
  |-------
[1]   ode_sol(closed_interval(a, c), n, f)(y0)(x!1) =
       ode_sol(closed_interval(a, b), n,
               LAMBDA (x: (closed_interval(a, b)),
                       v: VectorN(n)) -> VectorN(n):
                 f(x, v))
              (y0)(x!1)

Rule? (hide -1)
Hiding formulas:  -1,
this simplifies to: 
ode_sol_extend.1 :  

[-1]  length(ode_sol(closed_interval(a, c), n, f)(y0)(x!1)) = n
  |-------
[1]   ode_sol(closed_interval(a, c), n, f)(y0)(x!1) =
       ode_sol(closed_interval(a, b), n,
               LAMBDA (x: (closed_interval(a, b)),
                       v: VectorN(n)) -> VectorN(n):
                 f(x, v))
              (y0)(x!1)

Rule? (typepred "