Lipschitz_def [n:posnat]  % [ parameters ]
		: THEORY

%-----     %
  BEGIN
%     -----%

%--------------------------------------------
%% Importing continuity to have norms,
%  and to relate 
%--------------------------------------------

  IMPORTING continuity_multivar[n]

%----------------------------------------
%% Define Lipschitz for all norms
%----------------------------------------

LipD?(D:domain)(f:vec2real_f):
     bool =
     FORALL(n1:(norm?(n))):
     EXISTS(L:{LL:real | LL >= 0}):
     FORALL(p1, p2:(D)):
     abs(f(p1) - f(p2)) <= L * n1(p1 - p2)

LipD?(D:domain, m:posnat)(f:[(D) -> VectorN(m)]):
     bool =
     FORALL(n1:(norm?(n)),n2:(norm?(m))):
     EXISTS(L:{LL:real | LL >= 0}):
     FORALL(p1, p2:(D)):
     n2(f(p1) - f(p2)) <= L * n1(p1 - p2)

%----------------------------------------
%% Lipschitz implies continuity 
%----------------------------------------

Lip_cont_v2f: LEMMA
     FORALL(D:domain, f:vec2real_f):
     LipD?(D)(f) IMPLIES contD?(D)(f)

Lip_cont_v2v: LEMMA
     FORALL(D:domain, m:posnat,
     f:[(D) -> VectorN(m)]):
     LipD?(D, m)(f) IMPLIES contD?(D, m)(f)

%----------------------------------------
%% Define Lipschitz for a norm
%----------------------------------------

LipD_E?(D:domain)(f:vec2real_f):
     bool =
     EXISTS(n1:(norm?(n))):
     EXISTS(L:{LL:real | LL >= 0}):
     FORALL(p1, p2:(D)):
     abs(f(p1) - f(p2)) <= L * n1(p1 - p2)

LipD_E?(D:domain, m:posnat)(f:[(D) -> VectorN(m)]):
     bool =
     EXISTS(n1:(norm?(n)),n2:(norm?(m))):
     EXISTS(L:{LL:real | LL >= 0}):
     FORALL(p1, p2:(D)):
     n2(f(p1) - f(p2)) <= L * n1(p1 - p2)

%----------------------------------------
%% Lipschitz is equivalent for all norms
%----------------------------------------

Lip_norm_v2f: LEMMA
     FORALL(D:domain, f:vec2real_f):
     LipD?(D)(f) IFF LipD_E?(D)(f)

Lip_norm_v2v: LEMMA
     FORALL(D:domain, m:posnat,
     f:[(D) -> VectorN(m)]):
     LipD?(D,m)(f) IFF LipD_E?(D,m)(f)


  END Lipschitz_def
