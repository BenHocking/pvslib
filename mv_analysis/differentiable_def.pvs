differentiable_def   [n:posnat ] %Guten Tag
%%n - differentiability of f: Rn -> R
		: THEORY

%	              Aug 2018 JTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%|     Defines Frech\'{e}t       |%
%|       differentiability       |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%-----     %
  BEGIN
%     -----%

%--------------------------------------------
%% Importing derivative_domain_multi[n]
%  to have domains to do derivatives on

%% Importing analysis@derivatives to
%  have differentiability of single
%  variable function
%--------------------------------------------

IMPORTING derivative_domain_multi[n]
IMPORTING analysis@derivatives

%--------------------------------------------
%% Define difference quotient
%--------------------------------------------

NQ(f:vec2real_f, g, p: VectorN(n))(h : VectorN(n)):
     real = IF h /= zero_vec(n) THEN (f(p + h) - f(p)- g * (h) )/ norm_inf(n)(h)
     ELSE 0
     ENDIF

%--------------------------------------------
%% The if-then in this is not necisary 
%--------------------------------------------

NQ(D:domain, p: (D))(h:VectorN(n)):
     bool = D(p+h)

%--------------------------------------------
%% define Frechet differentiability at a point
%--------------------------------------------

differentiable?(D: (deriv_domain?), f:vec2real_f, p:(D)):
     bool = EXISTS(g: VectorN(n)):
     convergence_zero?(NQ(D,p), NQ(f,g,p), zero_vec(n))

%--------------------------------------------
%% define Frechet differentiability on a domain
%--------------------------------------------

differentiableD?(D:(deriv_domain?))(f:vec2real_f):
     bool = FORALL(p:(D)):
     differentiable?(D,f,p)

%--------------------------------------------
%% function that returns Frechet derivative
%--------------------------------------------

der_f(D:(deriv_domain?), p:(D))(f:{ff:vec2real_f |differentiable?(D,ff,p)}):
     {gg: VectorN(n) |
     convergence_zero?(NQ(D,p),NQ(f,gg,p), zero_vec(n))}

der_f(D:(deriv_domain?))(f:(differentiableD?(D))):
     {gg: [(D) -> VectorN(n)] | FORALL(p:(D)):
     convergence_zero?(NQ(D,p),NQ(f,gg(p),p), zero_vec(n))} =
     LAMBDA(p:(D)): der_f(D,p)(f)

%der_f_unique_dot: LEMMA
%  FORALL(v:VectorN(n)| v /= zero_vec(n), D:(deriv_domain_partial?(v)), p:(D),f:{ff:vec2real_f |differentiable?(D,ff,p)}, y:VectorN(n)):
%   convergence_zero?(NQ(D,p),NQ(f,y,p), zero_vec(n))
%   IMPLIES
%   y*v = der_f(D,p)(f)*v

%________________________________________________________
 % "We build too many walls and not enough bridges."
 %      	    	                    -Isaac Newton 

  %---   ~The End~  ---%
  END differentiable_def
