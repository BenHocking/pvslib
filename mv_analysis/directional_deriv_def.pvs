directional_deriv_def   [ n:posnat ] %Annyeonghaseyo
%%n - directional derivative of f: Rn -> R
		: THEORY

%	              Aug 2018 JTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%|      Defines directional      |%
%|         derivatives           |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%-----     %
  BEGIN
%     -----%

%--------------------------------------------
%% Importing directional_deriv_def[n] to define
%  partial derivative 
%--------------------------------------------
  
IMPORTING init_partial_def[n]

D_downd(D:domain, p,v:VectorN(n))(Delta:real):
   bool = 
   D_down(D,p,v)(Delta) AND Delta >= 0

%--------------------------------------------
%% Facts about D_down that are handy
% to help relate to deriavtive of single variable
%--------------------------------------------    

D_downd_der_domain: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_direction?(v)), p: (D) ):
     deriv_domain?[(D_downd(D, p, v))]

D_downd_domain: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[(D_downd(D, p, v))]

D_downd_der_domain_unit: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[{t: (D_downd(D, p, v)) | t > 0 AND t < 1}]

D_downd_domain_unit: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[{t: (D_downd(D, p, v)) | t > 0 AND t < 1}]

D_downd_domain_unitc: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[{t: (D_downd(D, p, v)) | t >= 0 AND t <= 1}]

D_downd_not_one: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?),
     p: (D) ):
     not_one_element?[(D_downd(D, p, v))]

D_downd_not_one_unit: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     not_one_element?[{t: (D_downd(D, p, v)) | t > 0 AND t < 1}]

D_downd_not_one_unitc: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     not_one_element?[{t: (D_downd(D, p, v)) | t >= 0 AND t <= 1}]

D_downd_direction_not_one: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_direction?[n](v)), p:(D)):
     not_one_element?[(D_downd(D, p, v))]

D_downd_direction_deriv_domain: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_direction?[n](v)), p:(D)):
     deriv_domain?[(D_downd(D, p, v))]

%--------------------------------------------
%% Define directional derivative
%--------------------------------------------

directional_deriv?(v: VectorN( n ),
     D:(deriv_domain_direction?(v)), f: vec2real_f)(
     p: (D)): bool
     = derivable?[(D_downd(D,p,v))]( LAMBDA( Delta: real ):
     f(p + Delta * v), 0)
     
directional_derivD?(v: VectorN( n ),
     D:(deriv_domain_direction?(v)))(f: vec2real_f):
     bool
     = FORALL (p: ( D ) ):
     directional_deriv?(v,D,f)(p)
          
%--------------------------------------------
%%Frechet derivative on rich enough domain
% means directional derivatives exist
%--------------------------------------------

diff_imp_direction: LEMMA
     FORALL(D: (deriv_domain_all_direction?),
     f: vec2real_f, p:(D)):
     differentiable?(D,f,p)
     IMPLIES FORALL(v:VectorN(n)): directional_deriv?(v,D,f)(p)

diff_imp_direction1: LEMMA
     FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D: (deriv_domain_direction?(v)), f: vec2real_f, p:(D)):
     differentiable?(D,f,p)
     IMPLIES
     directional_deriv?(v,D,f)(p)

%--------------------------------------------
%% Function that returns directional derivative 
%--------------------------------------------

directional_deriv(v: VectorN( n ),
     D: (deriv_domain_direction?(v)), f: vec2real_f,
     p: (directional_deriv?(v, D, f)) ):
     real = 
     deriv[(D_downd(D, p, v))](LAMBDA(Delta: real): f(p+Delta*v),0);

directional_deriv(v: VectorN( n ),
     D: (deriv_domain_direction?(v)), f: (directional_derivD?(v,D)))
     (p: ( D )):
     real = 
     directional_deriv(v,D,f,p)

%--------------------------------------------
%% Useful fact about derivative in zero direction
%--------------------------------------------

direction_zero_derivable:
     LEMMA FORALL (D: domain, f: vec2real_f):
        directional_derivD?(zero_vec(n), D)(f)
	
direction_zero: LEMMA FORALL(D:domain, f: vec2real_f,p:(D)):
     directional_deriv(zero_vec(n),D,f)(p) = 0

%--------------------------------------------
%% Frechet derivative implies all the directional
%  derivatives exists even in zero direction
%--------------------------------------------

diff_imp_direction2: LEMMA FORALL(v:VectorN(n), D: (deriv_domain_direction?(v)), f: vec2real_f, p:(D)):
     ((v /= zero_vec(n) AND differentiable?(D,f,p))
     IMPLIES
     directional_deriv?(v,D,f)(p))
     AND
     (v = zero_vec(n)
     IMPLIES
     directional_deriv?(v,D,f)(p))
     
%--------------------------------------------
%% directional derivative exists in
%  scalar direction
%--------------------------------------------

directional_deriv_scal: LEMMA
     FORALL(v:VectorN(n), D:(deriv_domain_both_direction?(v)),
     p:(D), f:vec2real_f,c:nnreal):
     directional_deriv?(v,D,f)(p)
     IMPLIES
     directional_deriv?(c*v,D,f)(p)

%--------------------------------------------
%% Frechet derivative dotted with vector
%  is the directional derivative
%--------------------------------------------

der_f_is_direction: LEMMA FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D:(deriv_domain_direction?(v)),
     f: (differentiableD?(D))):
     FORALL(p: (D)):
     der_f(D)(f)(p)*v = directional_deriv(v,D,f)(p)

der_f_is_direction1: LEMMA FORALL(v: VectorN(n),
     D:(deriv_domain_all_direction?),
     f: (differentiableD?(D))):
     FORALL(p: (D)):
     der_f(D)(f)(p)*v = directional_deriv(v,D,f)(p)

%--------------------------------------------
%% pull scalar out of directional derivative
%--------------------------------------------

directional_deriv_scalar: LEMMA
     FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D: (deriv_domain_both_direction?(v)),
     f: (differentiableD?(D)),
     p: (D),
     c:nnreal):
     c*directional_deriv(v,D,f)(p) =
     directional_deriv(c*v,D,f)(p)
     
%--------------------------------------------
%% sum of different directional derivatives is
%  derectional derivative of sum of directions
%--------------------------------------------

directional_deriv_additive: LEMMA
     FORALL(v1: VectorN( n ), v2: {vv: VectorN( n ) | v1 + vv /= zero_vec(n)},
     D: {DD:domain| (deriv_domain_direction?(v1)(DD)
     AND  deriv_domain_direction?(v2)(DD))
     AND deriv_domain_direction?(v1+v2)(DD)} ,
     f: (differentiableD?(D)),
     p: (D)):
     directional_deriv(v1+v2,D,f)(p) =
     directional_deriv(v1,D,f)(p)+ directional_deriv(v2,D,f)(p)

%--------------------------------------------
%% directional derivative is linear in the direction
%  variable
%--------------------------------------------

directional_deriv_linear:  LEMMA FORALL(v1,v2:VectorN(n), c:{cc:nnreal| v1+cc*v2 /= zero_vec(n)},
     D: {DD:domain| (deriv_domain_direction?(v1)(DD) AND  deriv_domain_both_direction?(v2)(DD))
     AND deriv_domain_direction?(v1+c*v2)(DD)},
     f: (differentiableD?(D))):
     directional_deriv(v1+c*v2,D,f)  =
     directional_deriv(v1,D,f) + c * directional_deriv(v2,D,f)
     
%--------------------------------------------
%% directional derivative is unique
%--------------------------------------------

directional_deriv_unique: LEMMA
     FORALL(v:VectorN(n), D: (deriv_domain_direction?(v)),
     f: (directional_derivD?(v,D)),
     p: (D), c1,c2: real):
     c1 = directional_deriv(v,D,f)(p) AND
     c2 = directional_deriv(v,D,f)(p)
     IMPLIES
     c1 = c2

%--------------------------------------------
%% For the correct domain, init_partial and
%  directional derivative are the same
%--------------------------------------------

init_par_dir_derivable: LEMMA
 FORALL(v:VectorN(n), D: (deriv_domain_direction?(v)), f:vec2real_f, p:(D)):
 init_partial?(v,D, f)(p)
 IMPLIES
 directional_deriv?(v, D, f)(p)

init_par_dir_deriv: LEMMA
 FORALL(v:VectorN(n), D: (deriv_domain_direction?(v)),
 f:vec2real_f, p:(D) | init_partial?(v,D,f)(p)):
 init_partial(v,D, f)(p) = directional_deriv(v, D, f, p)

%________________________________________________________
 % "Efforts and courage are not enough
 %     without purpose and direction."
 %	       	  	   	    	 - John F. Kennedy

  %---    ~The End~    ---%
  END directional_deriv_def
