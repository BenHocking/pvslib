init_partial_def[ n:posnat] %Good Evening
%%n - directional derivative of f: Rn -> R
		: THEORY

%	              Jan 2021 JTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%|   Define the initial partial  |%
%|   derivative that will define |%
%|         derivatives           |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%x

%-----     %
  BEGIN
%     -----%

%--------------------------------------------
%% Importing differentiable_def to have
%  Frechet derivative and single variable
%  derivative
%--------------------------------------------

  IMPORTING differentiable_def[n]

%--------------------------------------------
%% Project deriv_domain_direciton onto reals
%--------------------------------------------

D_down(D:domain, p,v:VectorN(n))(Delta:real):
     bool = D(p+Delta*v)
     
%--------------------------------------------
%% Facts about D_down that are handy
% to help relate to deriavtive of single variable
%--------------------------------------------    

D_down_der_domain: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_direction?(v)), p: (D) ):
     deriv_domain?[(D_down(D, p, v))]

D_down_domain: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[(D_down(D, p, v))]

D_down_der_domain_unit: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[{t: (D_down(D, p, v)) | t > 0 AND t < 1}]

D_down_domain_unit: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[{t: (D_down(D, p, v)) | t > 0 AND t < 1}]

D_down_domain_unitc: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     deriv_domain?[{t: (D_down(D, p, v)) | t >= 0 AND t <= 1}]

D_down_not_one: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?),
     p: (D) ):
     not_one_element?[(D_down(D, p, v))]

D_down_not_one_unit: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     not_one_element?[{t: (D_down(D, p, v)) | t > 0 AND t < 1}]

D_down_not_one_unitc: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_direction?), p: (D) ):
     not_one_element?[{t: (D_down(D, p, v)) | t >= 0 AND t <= 1}]

D_down_partial: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_partial?[n](v)), p:(D)):
     deriv_domain?[(D_down(D,p,v))]

D_down_all_partial: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_all_partial?[n]), p: (D) ):
     deriv_domain?[(D_down(D, p, v))]

D_down_partial_not_one: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_partial?[n](v)), p:(D)):
     not_one_element?[(D_down(D, p, v))]

D_down_direction_not_one: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_direction?[n](v)), p:(D)):
     not_one_element?[(D_down(D, p, v))]

D_down_direction_deriv_domain: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_direction?[n](v)), p:(D)):
     deriv_domain?[(D_down(D, p, v))]

%--------------------------------------------
%% Facts about D_downd that are handy
% to help relate to deriavtive of single variable
%--------------------------------------------

init_partial?(v: VectorN (n),
     D: (deriv_domain_partial?(v)),
     f:vec2real_f)(p:(D)): bool
     = derivable?[(D_down(D,p,v))](LAMBDA( Delta: real ):
     f(p + Delta * v), 0)

init_partial?(v: VectorN( n ),
     D:(deriv_domain_partial?(v)))(f: vec2real_f):
     bool
     = FORALL (p: ( D ) ):
     init_partial?(v, D, f)(p)

%--------------------------------------------
%%Frechet derivative on rich enough domain
% means directional derivatives exist
%--------------------------------------------

diff_imp_init_partial: LEMMA
     FORALL(D: (deriv_domain_all_partial?),
     f: vec2real_f, p:(D)):
     differentiable?(D,f,p)
     IMPLIES FORALL(v:VectorN(n)): init_partial?(v,D,f)(p)

diff_imp_init_partial1: LEMMA
     FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D: (deriv_domain_direction?(v)), f: vec2real_f, p:(D)):
     differentiable?(D,f,p)
     IMPLIES
     init_partial?(v,D,f)(p)

diff_imp_init_partial2: LEMMA
     FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D: (deriv_domain_partial?(v)), f: vec2real_f, p:(D)):
     differentiable?(D,f,p)
     IMPLIES
     init_partial?(v,D,f)(p)
     
%--------------------------------------------
%% Function that returns init_partial
%--------------------------------------------

init_partial(v: VectorN( n ),
     D: (deriv_domain_partial?(v)), f: vec2real_f)
     (p :(init_partial?(v, D, f)) ):    real = 
     deriv[(D_down(D, p, v))](LAMBDA(Delta: real): f(p+Delta*v),0);

%--------------------------------------------
%% Useful fact about init_partial in zero direction
%--------------------------------------------

init_partial_zero_derivable:
     LEMMA FORALL (D: domain, f: vec2real_f):
       init_partial?(zero_vec(n), D)(f)

init_partial_zero: LEMMA FORALL(D:domain, f: vec2real_f,p:(D)):
    init_partial(zero_vec(n),D,f)(p) = 0

%--------------------------------------------
%% Frechet derivative implies all the init_partials
%  exists even in zero direction
%--------------------------------------------

frech_diff_imp_init_partial: LEMMA FORALL(v:VectorN(n),
     D: (deriv_domain_partial?(v)), f: vec2real_f, p:(D)):
     ((v /= zero_vec(n) AND differentiable?(D,f,p))
     IMPLIES
     init_partial?(v,D,f)(p))
     AND
     (v = zero_vec(n)
     IMPLIES
     init_partial?(v,D,f)(p))

     
%--------------------------------------------
%% init_partial exists in
%  scalar direction
%--------------------------------------------

init_partial_scal: LEMMA
     FORALL(v:VectorN(n), D:(deriv_domain_partial?(v)),
     p:(D), f:vec2real_f,c:real):
     init_partial?(v,D,f)(p)
     IMPLIES
     init_partial?(c*v,D,f)(p)

%--------------------------------------------
%% Frechet derivative dotted with vector
%  is the init_partial
%--------------------------------------------

der_f_is_init_partial: LEMMA FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D:(deriv_domain_partial?(v)),
     f: (differentiableD?(D))):
     FORALL(p: (D)):
     der_f(D)(f)(p)*v = init_partial(v,D,f)(p)

conv_NQ_is_init_partial: LEMMA FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D:(deriv_domain_partial?(v)),
     f: vec2real_f, p:(D), dif: VectorN(n)):
     convergence_zero?(NQ(D, p), NQ(f, dif, p), zero_vec(n))
     IMPLIES
     dif *v = init_partial(v,D,f)(p)

der_f_is_init_partial1: LEMMA FORALL(v: VectorN(n),
     D:(deriv_domain_all_partial?),
     f: (differentiableD?(D))):
     FORALL(p: (D)):
     der_f(D)(f)(p)*v = init_partial(v,D,f)(p)

conv_NQ_is_init_partial1: LEMMA FORALL(v:VectorN(n),
     D:(deriv_domain_all_partial?),
     f: vec2real_f, p:(D), dif: VectorN(n)):
     convergence_zero?(NQ(D, p), NQ(f, dif, p), zero_vec(n))
     IMPLIES
     dif * v = init_partial(v,D,f)(p)

%--------------------------------------------
%% There is enough to show that der_f is
%  unique now. This should be moved
%--------------------------------------------

conv_NQ_unique: LEMMA FORALL(
     D:(deriv_domain_all_partial?),
     f: vec2real_f, p:(D), dif1,dif2: VectorN(n)):
     (convergence_zero?(NQ(D, p), NQ(f, dif1, p), zero_vec(n))
     AND
     convergence_zero?(NQ(D, p), NQ(f, dif2, p), zero_vec(n)))
     IMPLIES
     (dif1 = dif2)

der_f_unique: LEMMA
  FORALL(D:(deriv_domain_e_partial?),
  p:(D), f:{ff: vec2real_f | differentiable?(D,ff, p)}, dif:VectorN(n)):
  (convergence_zero?(NQ(D, p), NQ(f, dif, p), zero_vec(n)))
  IMPLIES
  dif = der_f(D,p)(f)

init_partial_scalar: LEMMA
     FORALL(v:{vv:VectorN(n)| vv /= zero_vec(n)},
     D: (deriv_domain_partial?(v)),
     f: (differentiableD?(D)),
     p: (D),
     c:real):
     c*init_partial(v,D,f)(p) =
     init_partial(c*v,D,f)(p)

%--------------------------------------------
%% sum of different directional derivatives is
%  derectional derivative of sum of directions
%--------------------------------------------

init_partial_additive: LEMMA
     FORALL(v1:{vv:VectorN(n)| vv /= zero_vec(n) }, v2: VectorN( n ),
     D: {DD:domain| (deriv_domain_partial?(v1)(DD)
     AND  deriv_domain_partial?(v2)(DD))
     AND deriv_domain_partial?(v1+v2)(DD)} ,
     f: (differentiableD?(D)),
     p: (D)):
     init_partial(v1+v2,D,f)(p) =
     init_partial(v1,D,f)(p)+ init_partial(v2,D,f)(p)

%--------------------------------------------
%% directional derivative is linear in the direction
%  variable
%--------------------------------------------

init_partial_linear:  LEMMA FORALL(v1:{vv:VectorN(n)| vv /= zero_vec(n)}, v2: VectorN(n), c:real,
     D: {DD:domain| (deriv_domain_partial?(v1)(DD) AND  deriv_domain_partial?(v2)(DD))
     AND deriv_domain_partial?(v1+c*v2)(DD)},
     f: (differentiableD?(D))):
     init_partial(v1+c*v2,D,f)  =
     init_partial(v1,D,f) + c * init_partial(v2,D,f)

  %--- ~The End~  ---%
  END init_partial_def
