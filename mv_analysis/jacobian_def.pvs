jacobian_def   [ n:posnat ] % Hello There
%% n - jacobian of function from f: Rn -> Rm
		: THEORY

%	              Aug 2018 JTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%|      Defines jacobian          |%
%|   of function from Rn->Rm      |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%-----     %
  BEGIN
%     -----%

%--------------------------------------------
%% Importing gradient_def[n] to have gradient
%  and the rest of differentiability
%--------------------------------------------

IMPORTING gradient_def[n]

%--------------------------------------------
%% Define what it means to have a Jocobian
%--------------------------------------------

jacobianp?(D: (deriv_domain_e_partial?), m: nat, f: [VectorN( n ) -> VectorN( m )] )
     ( p: (D) ): bool 
     =  FORALL ( j: below( m ) ):
     gradientp?(D,nth(m, f, j))(p)

jacobianD?(D: (deriv_domain_e_partial?))(m: nat, f: [VectorN( n ) -> VectorN( m )] ):
     bool 
     = FORALL( p : ( D ) ):
     jacobianp?(D,m, f)(p)

%--------------------------------------------
%% Facts about the Jacobian
%--------------------------------------------

jacobian_car: LEMMA FORALL(m:posnat, D: (deriv_domain_e_partial?), f: [VectorN( n ) -> VectorN( m )]):
     jacobianD?(D)(m,f)
     IMPLIES
     jacobianD?(D)(1 ,car_v(m,f))

jacobian_cdr: LEMMA FORALL(m:posnat, D: (deriv_domain_e_partial?), f: [VectorN( n ) -> VectorN( m )]):
     jacobianD?(D)(m,f)
     IMPLIES
     jacobianD?(D)(m-1 , cdr(m,f))

%--------------------------------------------
%% relationship between the Jacobian and the
%  Gradient
%--------------------------------------------

jac_2_grad: LEMMA FORALL (D: (deriv_domain_e_partial?), m:posnat, f: {ff: [VectorN( n ) -> VectorN( m )] | jacobianD?(D)(m, ff)}):
     jacobianD?(D)(m, f)
     IMPLIES
     gradientD?(D)((car[n](m, f)))

jacobian( D: (deriv_domain_e_partial?), m: posnat, f: {ff: [VectorN( n ) -> VectorN( m )] | jacobianD?(D)(m, ff)})(p: ( D )):
     RECURSIVE MatrixMN(m,n) =
     IF m=1
     THEN (: gradient(D, car(m,f))(p) :)
     ELSE
     cons( gradient(D, (car(m, f)))(p), jacobian(D, m-1, cdr(m,f))(p))
     ENDIF MEASURE m
 %________________________________________________________
 % "I have had my results for a long time:
 %     but I do not yet know how I am to arrive at them.."
 %	       	  	   	    	 - Carl F. Gauss [not Jacobi]
 
  %  ~The End~  %
  END jacobian_def
