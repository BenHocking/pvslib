norm_1_extreme_value_theorem   [ n:posnat ] %Konnichiwa
%n - length of vectors we are using
		: THEORY

%	              Aug 2018 JTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%|    extreme_value_theorem      |%
%|    for the 1-norm, to prove   |%
%|    equivalence of norms.      |%
%|    use more general theory    |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%-----     %
  BEGIN
%     -----%

%--------------------------------------------
%% Importing norm_1_sequential_criterian[ n ]
%  for the proof of EVT

%% Importing norm_1_bolzano_weierstrass[ n ]
%  for the proof of EVT

%% Importing unconstrained_global_extrema[ n ]
%  to have definition of max/min
%--------------------------------------------

IMPORTING norm_1_sequential_criterian[ n ]
IMPORTING norm_1_bolzano_weierstrass[ n ]
IMPORTING unconstrained_global_extrema[ n ]

%--------------------------------------------
%% Make sequence of vectors corresponding to
%  unbounded function values
%--------------------------------------------

unbound_fun( D :domain, f :{ f :vec2real_f |
     FORALL( M :nat ): EXISTS( v: ( D ) ) : abs( f( v ) ) > M } )
     ( i :nat ):
     RECURSIVE { p :( D ) | abs( f( p ) ) > i } 
     = IF i = 0
     THEN choose( { v :( D ) | abs( f( v ) ) > i } )
     ELSE choose( { v :( D ) | abs( f( v ) ) > i
     AND v /= unbound_fun( D, f )( i - 1 ) } )
     ENDIF MEASURE i ;
     
%--------------------------------------------
%% continuous function on bounded and
%  closed domain is bounded 
%--------------------------------------------
     
cont_on_cb_bounded: LEMMA FORALL ( D :{ DD :( norm_1_closed? )
     | norm_1_bounded?( DD ) },
     f :vec2real_f ):
     norm_1_contD?( D )( f )
     IMPLIES
     EXISTS( M :posreal ):
     FORALL( p :( D ) ):
     abs( f( p ) ) <= M ;

%--------------------------------------------
%% continuous function on bounded and
%  closed domain has least upper bound and
%  greatest lower bound
%--------------------------------------------

least_ub_on_cb:
     LEMMA FORALL ( D :{ DD :( norm_1_closed? )
     | norm_1_bounded?( DD ) AND nonempty?( DD ) },
     f: vec2real_f ):
     norm_1_contD?( D )( f )
     IMPLIES
     EXISTS( M :real ):
     least_upper_bound?( { t :real |
     EXISTS( v :( D ) ): f( v ) = t } )( M ) ;

greatest_lb_on_cb:
     LEMMA FORALL ( D :{ DD :( norm_1_closed? )|
     norm_1_bounded?( DD ) AND nonempty?( DD ) },  f :vec2real_f ):
     norm_1_contD?( D )( f )
     IMPLIES
     EXISTS( M :real ):
     greatest_lower_bound?( { t :real | EXISTS( v :( D ) ): f( v ) = t } )( M ) ;

%--------------------------------------------
%% continuous function on bounded and
%  closed domain has bounded range
%--------------------------------------------

nonempty_bounded: LEMMA FORALL( D :{ DD :( norm_1_closed? )|
     norm_1_bounded?( DD ) AND nonempty?( DD ) },
     f :{ ff :vec2real_f | norm_1_contD?( D )( ff ) } ):
     nonempty?[ real ]( { t :real |
     EXISTS ( v_1: ( D ) ): f( v_1 ) = t } )
     AND
     bounded_below?( { t :real |
     EXISTS ( v_1: ( D ) ): f( v_1 ) = t } ) ;

%--------------------------------------------
%% make sequence that approached greatest
%  lower bound. For proof that glb is achieved
%--------------------------------------------

glb_approach_seq( D :{ DD :( norm_1_closed? ) | norm_1_bounded?( DD )
     AND nonempty?( DD ) },
     f :{ ff :vec2real_f | norm_1_contD?( D )( ff ) } )
     ( i :nat ): {v :( D ) | f( v ) < glb( {t :real |
     EXISTS( v :( D ) ): f( v ) = t } ) + 1 / ( i + 1 ) }
     =  choose( { v :( D ) | f( v ) < glb( {t :real |
     EXISTS( v: ( D ) ): f( v ) = t } ) + 1 / ( i + 1 ) } ) ;

%--------------------------------------------
%% There is a vector that achieves glb
%--------------------------------------------

greatest_lb_subseq: LEMMA FORALL( D :{ DD :( norm_1_closed? ) |
     norm_1_bounded?( DD ) AND nonempty?( DD ) },
     f :{ ff :vec2real_f | norm_1_contD?( D )( ff ) } ):
     EXISTS( V: ( subsequence?( glb_approach_seq( D, f ) ) ) ):
     EXISTS( L: ( D ) ):
     norm_1_convergence?( n, V, L )
     AND
     f( L ) = glb( {t :real | EXISTS( v :( D ) ): f( v ) = t } ) ;

%--------------------------------------------
%% a continuous function on closed bounded domain
%  achieves max and min
%--------------------------------------------

min_on_closed_bounded: LEMMA FORALL( D :{ DD :( norm_1_closed? )|
     norm_1_bounded?( DD ) AND nonempty?( DD ) },  f :vec2real_f ):
     norm_1_contD?( D )( f )
     IMPLIES
     EXISTS( p :( D ), c :real ):
     ( is_glob_minimizer?( f, D )( p )
     AND
     is_glob_min?( f, D )( c ) )
     AND
     f( p ) = c ;

max_on_closed_bounded: LEMMA FORALL( D:{ DD: ( norm_1_closed? )|
     norm_1_bounded?( DD ) AND nonempty?( DD ) },  f :vec2real_f ):
     norm_1_contD?( D )( f )
     IMPLIES
     EXISTS( p :( D ), c :real ):
     ( is_glob_maximizer?( f, D )( p )
     AND
     is_glob_max?( f, D )( c ) )
     AND
     f( p ) = c ;

%________________________________________________________
 % "One thing my parents always taught me
 %     was to maximize my options.
 %      	     	   	    	   -Monica Raymund

  %---       ~The End~        ---% 
  END norm_1_extreme_value_theorem
