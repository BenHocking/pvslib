topology_Rn  [ n:posnat ] %Hallo
%n: domains in Rn
		: THEORY

%	              June 2018 JTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%|     These are some more       |%
%|   definitions of types of     |%
%|            domains            |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%-----     %
  BEGIN
%     -----%

%--------------------------------------------
%% Importing continuity_multivar[n]
%  to have continuity for path connectedness 
%--------------------------------------------

  IMPORTING continuity_multivar[n]

%--------------------------------------------
%% define an open domain
%--------------------------------------------

OpenD?(D:domain):
     bool =  FORALL(nn:(norm?(n))): FORALL (p:(D)):
     EXISTS (eps:posreal):
     FORALL (v:VectorN(n)):
     nn(p-v) < eps
     IMPLIES
     D(v)

OpenD?(nn:(norm?(n)))(D:domain):
     bool =  FORALL (p:(D)):
     EXISTS (eps:posreal):
     FORALL (v:VectorN(n)):
     nn(p-v) < eps
     IMPLIES
     D(v)

%--------------------------------------------
%% openness doesn't depend on norm choice
%--------------------------------------------

OpenD_equiv: LEMMA FORALL(D:domain):
     (EXISTS( nn:(norm?(n))): OpenD?(nn)(D))
     IFF
     OpenD?(D)

open_domain: TYPE = {D:domain | OpenD?(D)}


%--------------------------------------------
%% union of open domains is open
%--------------------------------------------

Union_open: LEMMA FORALL(sA: setof[open_domain]):
     OpenD?(Union(sA))


%--------------------------------------------
%% Define connected domain
%--------------------------------------------

connected_domain?(D:domain): bool = NOT EXISTS(D1,D2: open_domain):
((NOT empty?(D1) AND NOT empty?(D2))	      
AND empty?(intersection(D1,D2))) AND D= union(D1,D2)

%--------------------------------------------
%% Define path connected domain
%--------------------------------------------

path_connected_domain?(D:domain): bool = FORALL(v1,v2: (D)):
     EXISTS(f:[{r:real| 0 <= r AND r <= 1} -> (D)]):
     (f(0)=v1 AND f(1)=v2) AND cont?(norm_inf(n))(D,f)

%--------------------------------------------
%% Define convex domain
%--------------------------------------------

convex_domain?(D:domain): bool = FORALL(x1,x2:(D)):
     FORALL(t:{t:real| 0<=t and t<=1}):
      D(t*x1+(1-t)*x2)


%--------------------------------------------
%% path connected implies connected
%--------------------------------------------

%pc_implies_c: LEMMA FORALL(D:domain):
%     path_connected_domain?(D)
%     IMPLIES
%     connected_domain?(D)

%--------------------------------------------
%% convex domain implies path connected
%--------------------------------------------

convex_implies_pc: LEMMA FORALL(D:domain):
     convex_domain?(D)
     IMPLIES path_connected_domain?(D)
     
%--------------------------------------------
%% convex domain implies connected domain
%--------------------------------------------

%convex_implies_c: LEMMA FORALL(D:domain):
%     convex_domain?(D)
%     IMPLIES connected_domain?(D)

%________________________________________________________
 % "A child[’s]…first geometrical discoveries are
 %     topological…If you ask him to copy a square
 %     or a triangle, he draws a closed circle.
 %      	    	                   Jean Piaget
 
  %- ~The End~ -%
  END topology_Rn
