(csv_utils
 (strsplit_with_qchar_rec_TCC1 0
  (strsplit_with_qchar_rec_TCC1-1 nil 3902157046
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (string type-eq-decl nil strings nil)
    (StringChar type-eq-decl nil stdstr_util pvsio_utils)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (strsplit_with_qchar_rec subtype "csv_utils.tokens"
    "(list_adt[string].cons?)")))
 (strsplit_with_qchar_rec_TCC2 0
  (strsplit_with_qchar_rec_TCC2-1 nil 3902157046
   ("" (skeep*)
    (("" (inst 2 "(emptystr,singlequote,emptystr)") nil nil)) nil)
   ((singlequote_j name-judgement "StringChar" stdstr_util pvsio_utils)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (string type-eq-decl nil strings nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (StringChar type-eq-decl nil stdstr_util pvsio_utils)
    (emptystr const-decl "string" stdstr nil)
    (singlequote const-decl "string" stdstr nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (strsplit_with_qchar_rec existence ""
    "[string, StringChar, string]")))
 (strsplit_with_qchar_rec_TCC3 0
  (strsplit_with_qchar_rec_TCC3-1 nil 3902157046
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (string type-eq-decl nil strings nil)
    (StringChar type-eq-decl nil stdstr_util pvsio_utils)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<< adt-def-decl "(strict_well_founded?[list])" list_adt nil)
    (strcompare const-decl "int" stdstr_util pvsio_utils)
    (left_quotedstring? const-decl "bool" csv_utils nil)
    (right_quotedstring? const-decl "bool" csv_utils nil)
    (length def-decl "nat" list_props nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    ({\|\|} const-decl "Lisp" stdprog nil))
   nil
   (strsplit_with_qchar_rec termination
    "csv_utils.strsplit_with_qchar_rec(list_adt[string].cdr(csv_utils.tokens), csv_utils.separator, csv_utils.quotechar, \"\")"
    "nil")))
 (strsplit_with_qchar_rec_TCC4 0
  (strsplit_with_qchar_rec_TCC4-1 nil 3902157046
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (string type-eq-decl nil strings nil)
    (StringChar type-eq-decl nil stdstr_util pvsio_utils)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<< adt-def-decl "(strict_well_founded?[list])" list_adt nil)
    (strcompare const-decl "int" stdstr_util pvsio_utils)
    (left_quotedstring? const-decl "bool" csv_utils nil)
    (right_quotedstring? const-decl "bool" csv_utils nil)
    (length def-decl "nat" list_props nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    ({\|\|} const-decl "Lisp" stdprog nil))
   nil
   (strsplit_with_qchar_rec termination
    "csv_utils.strsplit_with_qchar_rec(list_adt[string].cdr(csv_utils.tokens), csv_utils.separator, csv_utils.quotechar, csv_utils.newstr)"
    "nil")))
 (strsplit_with_qchar_rec_TCC5 0
  (strsplit_with_qchar_rec_TCC5-1 nil 3902157046
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (string type-eq-decl nil strings nil)
    (StringChar type-eq-decl nil stdstr_util pvsio_utils)
    (<< adt-def-decl "(strict_well_founded?[list])" list_adt nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (strcompare const-decl "int" stdstr_util pvsio_utils)
    (left_quotedstring? const-decl "bool" csv_utils nil)
    (right_quotedstring? const-decl "bool" csv_utils nil))
   nil
   (strsplit_with_qchar_rec termination
    "csv_utils.strsplit_with_qchar_rec(list_adt[string].cdr(csv_utils.tokens), csv_utils.separator, csv_utils.quotechar, csv_utils.token)"
    "nil")))
 (strsplit_with_qchar_rec_TCC6 0
  (strsplit_with_qchar_rec_TCC6-1 nil 3902157046
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (string type-eq-decl nil strings nil)
    (StringChar type-eq-decl nil stdstr_util pvsio_utils)
    (<< adt-def-decl "(strict_well_founded?[list])" list_adt nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (strcompare const-decl "int" stdstr_util pvsio_utils)
    (left_quotedstring? const-decl "bool" csv_utils nil)
    (right_quotedstring? const-decl "bool" csv_utils nil))
   nil
   (strsplit_with_qchar_rec termination
    "csv_utils.strsplit_with_qchar_rec(list_adt[string].cdr(csv_utils.tokens), csv_utils.separator, csv_utils.quotechar, \"\")"
    "nil"))))

