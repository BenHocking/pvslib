stdio_utils : THEORY
BEGIN

  IMPORTING stdprog_utils

  input_mode?(m:Mode) : bool =
    (m = input OR m = str)

  output_mode?(m:Mode) : bool =
    (m = output OR m = create OR m = append OR m = overwrite OR
     m = rename OR m = str)

  % Writes a PVS object to an output stream, so that it can be retrieved afterwards by fread
  fwrite_lisp(f:OStream,typ:string,t:Lisp_) : void

  % Closes file when done (no matter what)
  with_openin_file[P:TYPE+](m:(input_mode?),s:string,fp:[IStream->P]): P =
    LET fin = fopenin(m,s) IN
    unwind_protect(fp(fin),fclose(fin))

  % Closes file when done (no matter what)
  with_openin_file[P:TYPE+](s:string,fp:[IStream->P]): MACRO P =
    with_openin_file(input,s,fp)

  % Closes file when done (no matter what)
  with_openout_file[P:TYPE+](m:(output_mode?),s:string,fp:[OStream->P]): P =
    LET fout = fopenout(m,s) IN
    unwind_protect(fp(fout),fclose(fout))

  % Closes file when done (no matter what)
  with_openout_file[P:TYPE+](s:string,fp:[OStream->P]): MACRO P =
    with_openout_file(output,s,fp)

END stdio_utils
