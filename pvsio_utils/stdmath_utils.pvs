stdmath_utils: THEORY
BEGIN

  Truncate : MACRO RoundingMode = TowardsZero

  % Returns a rational number that is close to the real number (identity when input is rational)
  rational(x:real) : rat

  % Returns numerator,denominator of rational number
  rat2numden(r:rat) : {nd:[int,posnat] | LET (num,den) = nd IN r = num/den}

  % Returns numerator of rational number
  numerator(r:rat) : int =
    rat2numden(r)`1

  % Returns denominator of rational number
  denominator(r:rat): posnat =
    rat2numden(r)`2

  % Compute the decimal precision of a rational number. Return 2 values. The first one is the number of
  % non-repeating digits. If maxperiod is negative, the second value is the period of the repeating
  % digits. Computing the period is expensive for rationals with large denominators. Therefore, if
  % maxperiod is non-negative, the second value is the minimum between the period and maxperiod+1.
  % In either case, if the second value is 0, the rational has a finite decimal representation.
  decimal_precision(r:rat,maxperiod:int) : [nat,nat] 

END stdmath_utils
