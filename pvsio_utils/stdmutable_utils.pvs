stdmutable_utils[T,P:TYPE+] : THEORY
BEGIN

  IMPORTING stdprog_utils

  save_lift(fp:[Dummy->P],gv:Mutable[T],val:T):P =
    unwind_protect(fp(dummy),set(gv,val))

  %% Save mutable variable gv of type T and restore its value after p of type P is evaluated,
  %% even if control leaves p, e.g., due to an exception
  with_mutable(gv:Mutable[T],p:P) : MACRO P =
    IF undef(gv) THEN
      unwind_protect(p,reset(gv))
    ELSE
      save_lift(LAMBDA(dummy:Dummy):p,gv,val(gv))
    ENDIF

  %% Set mutable variable gv to t and restore its value after p of type P is evaluated,
  %% even if control leaves p, e.g., due to an exception
  with_mutable(gv:Mutable[T],t:T,p:P) : MACRO P =
   with_mutable(gv,prog(set(gv,t),p))
 
END stdmutable_utils
