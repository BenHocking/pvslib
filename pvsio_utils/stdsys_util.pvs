stdsys_utils : THEORY
BEGIN

  %% Today in yyyy-mm-dd format
  date_yyyy_mm_dd : string =
    LET t = get_time IN
    format("~d-~2,'0d-~2,'0d",{| year(t), month(t), day(t) |})

  %% Today in dd-mm-yyyy format
  date_dd_mm_yyyy : string =
    LET t = get_time IN
    format("~2,'0d-~2,'0d-~d",{| day(t), month(t), year(t) |})

  real_time : nat % Realtime in internal units
  run_time  : nat % Realtime in internal units
  internal_time_units : posreal % Internal units

  Stamp : Global[[nat,nat],(0,0)]  % (realtime,runtime)

  tic : void =
    set[[nat,nat]](Stamp,(real_time,run_time))

  Toc : TYPE = [nnreal,nnreal]
  
  %% Return times in seconds
  toc : Toc = 
    LET (ret,rut) = (real_time,run_time),
        (re0,ru0) = val[[nat,nat]](Stamp) IN
      (max(0,(ret-re0))/internal_time_units,
       max(0,(rut-ru0)/internal_time_units))

  % t is in secods; returns formatted string in the form "<h>h:<m>m:<s>s"
  hms(t:real) : string =
    LET ts : int = floor(t),
        ms : real = t-ts,
        h  : int = floor(ts/3600),
        m  : int = floor(mod(ts,3600)/60),
        s  : real = mod(mod(ts,3600),60)+ms IN
    format("~ah:~am:~,3fs",{|h,m,s|})

  strtoc(atoc:Toc) : MACRO string =
    LET (realtime,runtime) = atoc IN 
    format("Real Time: ~a (~,3f sec). Run Time: ~a (~,3f sec)~%",
	  {| hms(realtime), realtime, hms(runtime), runtime |})

  %% Time profiler of a function of type T
  time_profiler[T:TYPE+](fun:T) : MACRO T =
    LET (result,atoc) = prog[[T,Toc]](tic,(fun,toc)) IN
      prog(print(strtoc(atoc)),
           result)

  % Make a system call and return status and output string
  system_call(call:string) : [nat,string]

END stdsys_utils
